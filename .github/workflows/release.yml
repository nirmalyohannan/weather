name: Release Flutter App

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.2'  # Specify the Flutter version
    
    # Setup Android SDK
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Install dependencies
      run: flutter pub get

    - name: Get version from pubspec
      id: version
      run: |
        VERSION=$(grep 'version:' pubspec.yaml | sed -e 's/version: //' -e 's/+.*//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    # Create credentials.dart in /lib/config/
    - name: Create credentials.dart
      run: |
        echo "class Credentials {static const apiKey = '${{ secrets.API_KEY }}';}';" > lib/config/credentials.dart

    - name: Build Android Release
      run: flutter build apk --release

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
        body: |
          Release version ${{ steps.version.outputs.version }}

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: weather-${{ steps.version.outputs.version }}.apk
        asset_content_type: application/vnd.android.package-archive
